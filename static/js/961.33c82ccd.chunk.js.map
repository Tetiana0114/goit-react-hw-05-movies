{"version":3,"file":"static/js/961.33c82ccd.chunk.js","mappings":"4LAeA,EAbe,WACX,OAAO,SAAC,KAAD,CACPA,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAGC,QAAS,OAAQC,eAAgB,UAClDC,iBAAiB,GACjBC,SAAS,GAEV,C,2HCoDH,UA5DqB,WAAO,IAAD,IACvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,MAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAmBnB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,2FACvBR,GAAW,GADY,mBAGCS,EAAAA,EAAAA,IAAgBN,GAHjB,OAGfO,EAHe,OAIrBR,EAAgBQ,GAJK,gDAOrBZ,EAAS,EAAD,IAPa,yBAUrBE,GAAW,GAVU,4EAAH,qDAatBQ,GACD,GAAE,CAACL,KAGF,iCACA,SAAC,KAAD,CAAMQ,GAAE,iBAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,UAAnC,UACA,mBAAQC,KAAK,SAAb,uBAECjB,IAAS,2DACTE,IAAW,SAAC,IAAD,IACXE,IACG,4BACE,gBAAKd,MAAM,QAAQ4B,IAAK,kCAAoCd,EAAae,YAAaC,IAAKhB,EAAaiB,SAExG,4BACE,0BAAKjB,EAAaiB,MAAlB,MAA4BjB,EAAakB,aAAaC,MAAM,EAAG,OAC/D,6BAAKnB,EAAaoB,QAAlB,QACA,wCAAgBC,KAAKC,MAAMtB,EAAauB,gBACxC,sCACA,uBAAIvB,EAAawB,YACjB,qCACA,wBAAKxB,EAAayB,OAAOC,KAAI,SAAAC,GAAK,OAAK,wBAAoBA,EAAMC,MAAjBD,EAAME,GAApB,aAIxC,mBACA,4BACE,oDACA,2BACE,yBAAI,SAAC,KAAD,CAAMnB,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAEN,mBACA,SAAC,KAAD,SAIP,C,8LC7DKoB,EAAM,mCACNC,EAAY,gCAELC,EAAgB,mCAAG,oGACLC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,sCAAoDD,IAD/C,cACtBI,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qDAKhBC,EAAY,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,GAAAA,IAAA,UAAaF,EAAb,gCAA8CD,EAA9C,iCAA0EQ,EAA1E,gCADC,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZ5B,EAAe,mCAAG,WAAMN,GAAN,uFACJ+B,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA+B7B,EAA/B,oBAAkD4B,EAAlD,oBADI,cACrBI,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfI,EAAY,mCAAG,WAAMrC,GAAN,uFACD+B,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA+B7B,EAA/B,4BAA0D4B,EAA1D,oBADC,cAClBI,EADkB,yBAEjBA,EAASC,KAAKK,MAFG,2CAAH,sDAKZC,EAAe,mCAAG,WAAMvC,GAAN,uFACJ+B,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA+B7B,EAA/B,4BAA0D4B,EAA1D,2BADI,cACrBI,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qD","sources":["components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import { ThreeDots } from  'react-loader-spinner';\n\nconst Loader = ( ) => {\n    return <ThreeDots\n    height=\"80\" \n    width=\"80\" \n    radius=\"9\"\n    color=\"#0a6344\" \n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{  display: 'flex', justifyContent: 'center' }}\n    wrapperClassName=\"\"\n    visible={true}\n     />\n  };\n  \nexport default Loader;","import { useState, useEffect } from 'react';\nimport { useLocation, useParams, Outlet, Link } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/fetchMovies';\nimport Loader from '../../components/Loader';\n\nconst MovieDetails = () => {\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [movieDetails, setMovieDetails] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n  useEffect(() => {\n    const getDetailsOfFilm = async () => {\n      setLoading(true);\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieDetails(details);\n      }\n      catch (error) {\n        setError(error);\n      }\n      finally {\n        setLoading(false);\n      }\n    };\n    getDetailsOfFilm();\n  }, [movieId]);\n\n  return (\n    <>\n    <Link to={location?.state?.from ?? '/movies'}>\n    <button type=\"button\">Go back</button>\n    </Link>\n    {error && <p>Whoops, something went wrong...</p>}\n    {loading && <Loader />}\n    {movieDetails && (\n        <div>\n          <img width=\"300px\" src={'https://image.tmdb.org/t/p/w500' + movieDetails.poster_path} alt={movieDetails.title}\n          />\n          <div>\n            <h1>{movieDetails.title} / {movieDetails.release_date.slice(0, 4)}</h1>\n            <p>\"{movieDetails.tagline}\"</p>\n            <p>User Score: {Math.round(movieDetails.popularity)}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres:</h2>\n            <ul>{movieDetails.genres.map(genre => (<li key={genre.id}>{genre.name}</li>))}</ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li><Link to=\"cast\">Cast</Link></li>\n          <li><Link to=\"reviews\">Reviews</Link></li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst KEY = '93fca4687d78764c2a220d92f59e9e96';\nconst BASIC_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = async () => {\n    const response = await axios.get(`${BASIC_URL}trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async query => {\n    const response = await axios.get(`${BASIC_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data.results;\n};\n  \nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(`${BASIC_URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n    const response = await axios.get(`${BASIC_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n    const response = await axios.get(`${BASIC_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`);\n    return response.data.results;\n};"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","wrapperClassName","visible","useState","error","setError","loading","setLoading","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","useEffect","getDetailsOfFilm","getMovieDetails","details","to","state","from","type","src","poster_path","alt","title","release_date","slice","tagline","Math","round","popularity","overview","genres","map","genre","name","id","KEY","BASIC_URL","getTrendingMovie","axios","response","data","results","searchMovies","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}