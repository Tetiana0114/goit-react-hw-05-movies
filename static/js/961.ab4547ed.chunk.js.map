{"version":3,"file":"static/js/961.ab4547ed.chunk.js","mappings":"4LAeA,EAbe,WACX,OAAO,SAAC,KAAD,CACPA,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAGC,QAAS,OAAQC,eAAgB,UAClDC,iBAAiB,GACjBC,SAAS,GAEV,C,2HCgEH,UAxEqB,WAAO,IAAD,IACvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,MAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAmBnB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,2FACvBR,GAAW,GADY,mBAGCS,EAAAA,EAAAA,IAAgBN,GAHjB,OAGfO,EAHe,OAIrBR,EAAgBQ,GAJK,gDAOrBZ,EAAS,EAAD,IAPa,yBAUrBE,GAAW,GAVU,4EAAH,qDAatBQ,GACD,GAAE,CAACL,KAGF,iCACE,SAAC,KAAD,CAAMQ,GAAE,iBAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,UAAnC,UACE,mBAAQC,KAAK,SAAb,8BAEGjB,IAAS,2DACbE,IAAW,SAAC,IAAD,IACXE,IACC,4BACE,gBACEd,MAAM,QACN4B,IAAKd,EAAae,YAClBC,IAAKhB,EAAaiB,SAEpB,4BACE,0BACGjB,EAAaiB,MADhB,KACyBjB,EAAakB,aAAaC,MAAM,EAAG,GAD5D,QAGA,wCAAgBnB,EAAaoB,eAC7B,sCACA,uBAAIpB,EAAaqB,YACjB,oCACA,wBACGrB,EAAasB,OAAOC,KAAI,SAAAC,GAAK,OAC5B,wBAAoBA,EAAMC,MAAjBD,EAAMtB,GADa,aAOtC,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMQ,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,mBACA,SAAC,KAAD,SAIP,C,8LCzEKgB,EAAM,mCACNC,EAAY,gCAELC,EAAgB,mCAAG,oGACLC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,sCAAoDD,IAD/C,cACtBI,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qDAKhBC,EAAY,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,GAAAA,IAAA,UAAaF,EAAb,gCAA8CD,EAA9C,iCAA0EQ,EAA1E,gCADC,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZxB,EAAe,mCAAG,WAAMN,GAAN,uFACJ2B,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA+BzB,EAA/B,oBAA6CwB,EAA7C,oBADI,cACrBI,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfI,EAAY,mCAAG,WAAMjC,GAAN,uFACD2B,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA+BzB,EAA/B,4BAAqDwB,EAArD,oBADC,cAClBI,EADkB,yBAEjBA,EAASC,KAAKK,MAFG,2CAAH,sDAKZC,EAAe,mCAAG,WAAMnC,GAAN,uFACJ2B,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA+BzB,EAA/B,4BAAqDwB,EAArD,2BADI,cACrBI,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qD","sources":["components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import { ThreeDots } from  'react-loader-spinner';\n\nconst Loader = ( ) => {\n    return <ThreeDots\n    height=\"80\" \n    width=\"80\" \n    radius=\"9\"\n    color=\"#0a6344\" \n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{  display: 'flex', justifyContent: 'center' }}\n    wrapperClassName=\"\"\n    visible={true}\n     />\n  };\n  \nexport default Loader;","import {  Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from '../../services/fetchMovies';\nimport Loader from '../../components/Loader';\n\nconst MovieDetails = () => {\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [movieDetails, setMovieDetails] = useState(null);\n    const { id } = useParams();\n    const location = useLocation();\n\n  useEffect(() => {\n    const getDetailsOfFilm = async () => {\n      setLoading(true);\n      try {\n        const details = await getMovieDetails(id);\n        setMovieDetails(details);\n      }\n      catch (error) {\n        setError(error);\n      }\n      finally {\n        setLoading(false);\n      }\n    };\n    getDetailsOfFilm();\n  }, [id]);\n\n  return (\n    <>\n      <Link to={location?.state?.from ?? '/movies'}>\n        <button type=\"button\">Back to search</button>\n          </Link>\n          {error && <p>Whoops, something went wrong...</p>}\n      {loading && <Loader />}\n      {movieDetails && (\n        <div>\n          <img\n            width=\"250px\"\n            src={movieDetails.poster_path}\n            alt={movieDetails.title}\n          />\n          <div>\n            <h1>\n              {movieDetails.title} ({movieDetails.release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {movieDetails.popularity}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {movieDetails.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst KEY = '93fca4687d78764c2a220d92f59e9e96';\nconst BASIC_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = async () => {\n    const response = await axios.get(`${BASIC_URL}trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async query => {\n    const response = await axios.get(`${BASIC_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data.results;\n};\n  \nexport const getMovieDetails = async id => {\n    const response = await axios.get(`${BASIC_URL}movie/${id}?api_key=${KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCast = async id => {\n    const response = await axios.get(`${BASIC_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`${BASIC_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n    return response.data.results;\n};"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","wrapperClassName","visible","useState","error","setError","loading","setLoading","movieDetails","setMovieDetails","id","useParams","location","useLocation","useEffect","getDetailsOfFilm","getMovieDetails","details","to","state","from","type","src","poster_path","alt","title","release_date","slice","popularity","overview","genres","map","genre","name","KEY","BASIC_URL","getTrendingMovie","axios","response","data","results","searchMovies","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}